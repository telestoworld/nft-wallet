{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.*/.entry/.js$/ groupOptions: {} namespace object","cache/contract/useContracts.ts","cache/index.ts","hooks/useEVMChainId.ts","components/wallet/WalletCard.tsx","components/wallet/WalletConnector.tsx","routes/dashboard-route.ts","pages/Home.tsx","contracts/Ierc721EnumerableFactory.ts","contracts/Ierc721MetadataFactory.ts","routes/vault-routes.ts","pages/Vault.tsx","routes/routes.ts","config/index.ts","routes/sections.ts","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","useContracts","composeStore","schema","definition","initial","cache","web3","contract","useChainId","create","setStore","state","chainIds","utils","hexlify","initialize","a","setActive","active","setRequested","requested","WalletCard","dismiss","hideOk","useWallet","connect","status","error","balance","account","chainId","activeChainId","x","setChainId","requestedChainId","chains","chainInfo","String","blockExplorer","nativeCurrency","decimals","name","symbol","icon","useState","initialized","useEffect","allChains","unique","filter","Boolean","parseInt","title","slot","color","message","fill","expand","onClick","catch","alt","src","Math","pow","ChainIdIcon","requestedId","renderChainId","isConnected","ethereum","info","correctChainAndConnected","isRequested","renderChainIdUint256","window","request","JSON","parse","stringify","method","params","chainIdHex","confirm","chainName","blockExplorerUrls","rpcUrls","rpc","console","log","alert","finally","shortName","ChainIdIconSmall","img","toLowerCase","WalletConnector","showIcon","showModal","setShowModal","getBlockNumber","isOpen","onDismiss","dashboardRoute","path","component","exact","Ierc721EnumerableFactory","address","signerOrProvider","Contract","_abi","anonymous","inputs","indexed","internalType","type","outputs","stateMutability","Ierc721MetadataFactory","vaultRoute","keyIndexOwned","setKeyIndexOwned","metadata","setMetadata","signer","ethers","providers","Web3Provider","getSigner","TELOKEYS","functions","ownerOf","owner","tokenURI","uri","fetch","replaceAll","res","json","data","size","image","attributes","attribute","trait_type","value","routes","Config","appId","version","mainMenu","sections","bottomBar","start","settings","disabled","darkMode","animated","serialization","mode","App","config","location","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mHAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.64165730.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t319,\n\t\t15\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t320,\n\t\t16\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t321,\n\t\t18\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t322,\n\t\t35\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t323,\n\t\t36\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t324,\n\t\t61\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t325,\n\t\t37\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t326,\n\t\t38\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t327,\n\t\t39\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t328,\n\t\t40\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t329,\n\t\t62\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t330,\n\t\t21\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t331,\n\t\t41\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t332,\n\t\t63\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t333,\n\t\t64\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t334,\n\t\t42\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t335,\n\t\t43\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t336,\n\t\t44\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t337,\n\t\t45\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t338,\n\t\t46\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t339,\n\t\t19\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t340,\n\t\t32\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t341,\n\t\t20\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t342,\n\t\t47\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t343,\n\t\t48\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t344,\n\t\t49\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t345,\n\t\t22\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t346,\n\t\t34\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t347,\n\t\t65\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t348,\n\t\t50\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t349,\n\t\t51\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t350,\n\t\t52\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t351,\n\t\t53\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t352,\n\t\t66\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t353,\n\t\t24\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t354,\n\t\t67\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t355,\n\t\t54\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t356,\n\t\t33\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t357,\n\t\t55\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t358,\n\t\t56\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t359,\n\t\t57\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t360,\n\t\t23\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t361,\n\t\t68\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 284;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t362,\n\t\t77\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 286;\nmodule.exports = webpackAsyncContext;","import { composeStore } from \"store\";\r\nimport schema from \"./contract.schema.json\";\r\nexport interface ContractIdentity {\r\n    address: string,\r\n    name: string\r\n    chainId: number\r\n    contractType: string\r\n    chainType: string\r\n}\r\nexport const useContracts = composeStore<ContractIdentity>({\r\n    schema,\r\n    definition: \"contract\",\r\n    initial: {\r\n    }\r\n})","import { useContracts } from \"./contract/useContracts\";\r\n\r\n//namespace\r\n//definition\r\n//useStoreInstance\r\nexport const cache = {\r\n    web3: {\r\n        contract: useContracts\r\n    }\r\n}","import { utils } from \"ethers\"\r\nimport create from \"zustand\"\r\nexport interface chainInfo {\r\n    chainId: number\r\n    chainIdHex: string\r\n    name: string,\r\n    shortName: string,\r\n    networkId: number,\r\n    nativeCurrency: {\r\n        name: string,\r\n        symbol: string,\r\n        decimals: number\r\n    }\r\n    rpc: string[],\r\n    faucets?: string[],\r\n    infoUrl?: string,\r\n    blockExplorerUrls?: string[]\r\n    icon?: string\r\n}\r\nexport type useChainIdHook = {\r\n    chainIds: Record<string, chainInfo>\r\n    active?: number,\r\n    requested?: number,\r\n    setActive: (active: number) => void\r\n    setRequested: (requested: number) => void\r\n    initialize: () => void\r\n}\r\n\r\nexport const useChainId = create<useChainIdHook>((setStore, state) => ({\r\n    chainIds: {\r\n        // \"3\": {\r\n        //     \"name\": \"Ethereum Testnet Ropsten\",\r\n        //     \"chainId\": 3,\r\n        //     \"shortName\": \"rop\",\r\n        //     \"chain\": \"ETH\",\r\n        //     \"network\": \"ropsten\",\r\n        //     \"chainIdHex\": \"0x3\",\r\n        //     \"networkId\": 3,\r\n        //     \"nativeCurrency\": {\r\n        //         \"name\": \"Ropsten Ether\",\r\n        //         \"symbol\": \"ETH\", \"decimals\": 18\r\n        //     },\r\n        //     \"rpc\": [\r\n        //         \"https://ropsten-light.eth.linkpool.io/\",\r\n        //         \"wss://ropsten-light.eth.linkpool.io/ws\",\r\n        //     ],\r\n        //     \"infoURL\": \"https://github.com/ethereum/ropsten\"\r\n        // },\r\n        // \"4\": {\r\n        //     \"name\": \"Rineby Testnet\",\r\n        //     \"chain\": \"Ethereum\",\r\n        //     \"network\": \"testnnet\",\r\n        //     \"rpc\": [\r\n        //         \"https://rinkeby-light.eth.linkpool.io/\",\r\n        //         \"wss://rinkeby-light.eth.linkpool.io/ws\",\r\n        //     ],\r\n        //     \"faucets\": [],\r\n        //     \"nativeCurrency\": {\r\n        //         \"name\": \"Rin\",\r\n        //         \"symbol\": \"ETH\",\r\n        //         \"decimals\": 18\r\n        //     },\r\n        //     \"shortName\": \"Rin\",\r\n        //     \"chainId\": 4,\r\n        //     \"chainIdHex\": \"0x4\",\r\n        //     \"networkId\": 4,\r\n        //     \"slip44\": 966,\r\n        //     \"explorers\": [\r\n        //         {\r\n        //             \"name\": \"etherscan\",\r\n        //             \"url\": \"https://rinkeby.etherscan.io/\",\r\n        //             \"standard\": \"EIP3091\"\r\n        //         }\r\n        //     ]\r\n        // },\r\n        // \"97\": {\r\n        //     \"name\": \"Binance Smart Chain Testnet\",\r\n        //     \"chainId\": 97,\r\n        //     \"shortName\": \"bnb\",\r\n        //     \"chain\": \"BSC\",\r\n        //     \"network\": \"Chapel\",\r\n        //     \"networkId\": 97,\r\n        //     \"chainIdHex\": \"0x67\",\r\n        //     \"nativeCurrency\": { \"name\": \"Binance Chain Native Token\", \"symbol\": \"BNB\", \"decimals\": 18 },\r\n        //     \"rpc\": [\"https://data-seed-prebsc-1-s1.binance.org:8545\", \"https://data-seed-prebsc-2-s1.binance.org:8545\", \"https://data-seed-prebsc-1-s2.binance.org:8545\", \"https://data-seed-prebsc-2-s2.binance.org:8545\", \"https://data-seed-prebsc-1-s3.binance.org:8545\", \"https://data-seed-prebsc-2-s3.binance.org:8545\"],\r\n        //     \"faucets\": [\"https://testnet.binance.org/faucet-smart\"],\r\n        //     \"infoURL\": \"https://testnet.binance.org/\"\r\n        // },\r\n        // \"42\": {\r\n        //     \"name\": \"Ethereum Testnet Kovan\",\r\n        //     \"chainId\": 42,\r\n        //     \"shortName\": \"kov\",\r\n        //     \"chain\": \"ETH\",\r\n        //     \"network\": \"kovan\",\r\n        //     \"networkId\": 42,\r\n        //     \"chainIdHex\": utils.hexlify(42),\r\n        //     \"nativeCurrency\": { \"name\": \"Kovan Ether\", \"symbol\": \"ETH\", \"decimals\": 18 },\r\n        //     \"rpc\": [\"https://eth-kovan.alchemyapi.io/v2/Gd0MfakZNlEv5U8Yx_6oFoOy_Q222DqE\", \"wss://eth-kovan.alchemyapi.io/v2/Gd0MfakZNlEv5U8Yx_6oFoOy_Q222DqE\"],\r\n        //     \"faucets\": [\"https://faucet.kovan.network\", \"https://gitter.im/kovan-testnet/faucet\"],\r\n        //     \"infoURL\": \"https://kovan-testnet.github.io/website\"\r\n        // },\r\n\r\n        // \"44787\": {\r\n        //     \"name\": \"Alfajores Testnet\",\r\n        //     \"chainId\": 44787,\r\n        //     \"shortName\": \"ACELO\",\r\n        //     \"chain\": \"CELO\",\r\n        //     \"network\": \"celo\",\r\n        //     \"networkId\": 44787,\r\n        //     \"chainIdHex\": utils.hexlify(44787),\r\n        //     \"nativeCurrency\": { \"name\": \"ACelo\", \"symbol\": \"CELO\", \"decimals\": 18 },\r\n        //     \"rpc\": [\"https://alfajores-forno.celo-testnet.org\", \"wss://alfajores-forno.celo-testnet.org/ws\"],\r\n        // },\r\n        \"42220\": {\r\n            \"name\": \"Celo Main Net\",\r\n            \"chainId\": 42220,\r\n            \"shortName\": \"CELO\",\r\n            \"chain\": \"CELO\",\r\n            \"network\": \"celo\",\r\n            \"networkId\": 42220,\r\n            \"chainIdHex\": utils.hexlify(42220),\r\n            \"nativeCurrency\": { \"name\": \"Celo\", \"symbol\": \"CELO\", \"decimals\": 18 },\r\n            \"rpc\": [\"https://forno.celo.org\",\"wss://forno.celo.org/ws\"],\r\n        },\r\n        // \"1666600000\": {\r\n        //     \"name\": \"Harmony Mainnet Shard 0\",\r\n        //     \"chain\": \"Harmony\",\r\n        //     \"chainIdHex\": utils.hexlify(1666600000),\r\n        //     \"network\": \"mainnet\",\r\n        //     \"rpc\": [\r\n        //         \"https://api.harmony.one\"\r\n        //     ],\r\n        //     \"faucets\": [\r\n        //         \"https://free-online-app.com/faucet-for-eth-evm-chains/\"\r\n        //     ],\r\n        //     \"nativeCurrency\": {\r\n        //         \"name\": \"ONE\",\r\n        //         \"symbol\": \"ONE\",\r\n        //         \"decimals\": 18\r\n        //     },\r\n        //     \"infoURL\": \"https://www.harmony.one/\",\r\n        //     \"shortName\": \"hmy-s0\",\r\n        //     \"chainId\": 1666600000,\r\n        //     \"networkId\": 1666600000,\r\n        //     \"explorers\": [\r\n        //         {\r\n        //             \"name\": \"Harmony Block Explorer\",\r\n        //             \"url\": \"https://explorer.harmony.one\",\r\n        //             \"standard\": \"EIP3091\"\r\n        //         }\r\n        //     ]\r\n        // },\r\n        // \"137\": {\r\n        //     \"name\": \"Polygon Mainnet\",\r\n        //     \"chain\": \"Polygon\",\r\n        //     \"network\": \"mainnet\",\r\n        //     \"rpc\": [\r\n        //         \"https://polygon-rpc.com/\",\r\n        //         \"https://rpc-mainnet.matic.network\",\r\n        //         \"https://matic-mainnet.chainstacklabs.com\",\r\n        //         \"https://rpc-mainnet.maticvigil.com\",\r\n        //         \"https://rpc-mainnet.matic.quiknode.pro\",\r\n        //         \"https://matic-mainnet-full-rpc.bwarelabs.com\"\r\n        //     ],\r\n        //     \"faucets\": [],\r\n        //     \"nativeCurrency\": {\r\n        //         \"name\": \"MATIC\",\r\n        //         \"symbol\": \"MATIC\",\r\n        //         \"decimals\": 18\r\n        //     },\r\n        //     \"infoURL\": \"https://polygon.technology/\",\r\n        //     \"shortName\": \"MATIC\",\r\n        //     \"chainId\": 137,\r\n        //     \"chainIdHex\": utils.hexlify(137),\r\n        //     \"networkId\": 137,\r\n        //     \"slip44\": 966,\r\n        //     \"explorers\": [\r\n        //         {\r\n        //             \"name\": \"polygonscan\",\r\n        //             \"url\": \"https://polygonscan.com/\",\r\n        //             \"standard\": \"EIP3091\"\r\n        //         }\r\n        //     ]\r\n        // },\r\n    },\r\n    initialize: async () => {\r\n    }, setActive: (active) => {\r\n        setStore({ active })\r\n    }, setRequested: (requested) => {\r\n        setStore({ requested })\r\n    },\r\n}))\r\n","import { AppAvatar, AppButton, AppButtons, AppCard, AppChip, AppCol, AppGrid, AppImg, AppItem, AppItemDivider, AppLabel, AppList, AppRow, AppSpinner, AppTitle, unique } from \"atomic\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport { useChainId } from \"../../hooks/useEVMChainId\";\r\nimport { ChainIdIcon } from \"./WalletConnector\";\r\n\r\nexport const WalletCard: React.FC<{ dismiss: () => void, hideOk?: boolean }> = ({ dismiss, hideOk }) => {\r\n    const { connect, status, error, balance, account, chainId } = useWallet()\r\n    const activeChainId = useChainId(x => x.active)\r\n    const setChainId = useChainId(x => x.setActive);\r\n    const requestedChainId = useChainId(x => x.requested);\r\n    const chains = useChainId(x => x.chainIds);\r\n    const chainInfo = useChainId(x => activeChainId && x.chainIds[String(activeChainId)]) || { blockExplorer: \"\", chainId, nativeCurrency: { decimals: 18, name: \"UNKNOWN\", symbol: \"UNK\" }, icon: \"\", name: \"unknown\" };\r\n    const [initialized, initialize] = useState<boolean>(false);\r\n    useEffect(() => {\r\n        chainId && setChainId(chainId);\r\n    }, [chainId, setChainId])\r\n    useEffect(() => {\r\n        !initialized && (() => {\r\n            initialize(true)\r\n        })()\r\n        initialize(true)\r\n    }, [connect, initialized])\r\n\r\n\r\n    const prettyBalance = () => chainInfo.nativeCurrency.symbol + \" \" + String(parseInt(balance) * (1 / (Math.pow(10, chainInfo.nativeCurrency.decimals))))\r\n    const allChains = unique([...Object.keys(chains), String(activeChainId)]).filter(Boolean).map(x => parseInt(x, 10))\r\n\r\n    return <AppList>\r\n        <AppCard title=\"Telesto World Wallet\">\r\n            <>\r\n                {< AppItem>\r\n                    <AppLabel>Address: </AppLabel>\r\n                    <AppButtons slot='end'>\r\n                        <AppChip>\r\n                            {account || \"unknown\"}\r\n                        </AppChip>\r\n                    </AppButtons>\r\n                </AppItem>}\r\n                <AppItem><AppLabel>Status:</AppLabel>\r\n                    <AppChip color={status === \"connected\" ? \"favorite\" : status === \"connecting\" ? \"primary\" : \"warning\"}>\r\n                        {status}\r\n                    </AppChip>\r\n                </AppItem>\r\n            </>\r\n            <AppGrid>\r\n                <AppRow>\r\n                    <AppItem>\r\n                        <AppCol><AppLabel>Chain:</AppLabel></AppCol>\r\n                    </AppItem>\r\n                    <AppCol>\r\n                        {allChains.map((chainId) => <ChainIdIcon key={chainId} chainId={String(chainId)} />)}\r\n                    </AppCol>\r\n                </AppRow>\r\n                <AppItemDivider color=\"clear\" />\r\n            </AppGrid>\r\n\r\n            <>\r\n                {error && error?.message}\r\n                {status === 'connected' && (typeof requestedChainId === \"undefined\" || requestedChainId === activeChainId) ? (<>\r\n                    <AppItem>\r\n                        <AppLabel>Balance:</AppLabel>\r\n                        <AppButtons slot=\"end\">\r\n                            {balance ? <AppTitle color={balance === \"0\" ? \"danger\" : \"favorite\"}>{prettyBalance()}\r\n                            </AppTitle> : <AppSpinner />}\r\n                        </AppButtons>\r\n                    </AppItem>\r\n                </>\r\n                ) : <AppButton fill=\"outline\" expand=\"full\" onClick={() => {\r\n                    connect(\"injected\").then((e) => {\r\n                    }).catch(() => {\r\n                    })\r\n                }} >\r\n                    Connect with Metamask\r\n                    <AppAvatar >\r\n\r\n                        <AppImg alt=\"metamask\" src=\"https://github.com/MetaMask/brand-resources/raw/master/SVG/metamask-fox.svg\" />\r\n                    </AppAvatar>\r\n                </AppButton>}\r\n                {hideOk !== true && status === 'connected' && (typeof requestedChainId === \"undefined\" || requestedChainId === activeChainId) && <AppButton onClick={dismiss} expand=\"full\" fill=\"solid\" color=\"light\">OK</AppButton>}\r\n            </>\r\n        </AppCard>\r\n    </ AppList>\r\n\r\n}","import { AppButton, AppImg, AppModal } from \"atomic\";\r\nimport { useState } from \"react\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport { useChainId } from \"../../hooks/useEVMChainId\";\r\nimport { WalletCard } from \"./WalletCard\";\r\n\r\n\r\nexport const ChainIdIcon: React.FC<{ chainId?: string, onClick?: () => void }> = ({ chainId, onClick }) => {\r\n    const activeChainId = String(useChainId(x => x.active));\r\n    const requestedId = String(useChainId(x => x.requested));\r\n    const renderChainId = String(chainId);\r\n    const { setRequested } = useChainId()\r\n    const { isConnected, ethereum, connect } = useWallet();\r\n    const chains = useChainId(x => x.chainIds);\r\n    const info = chains[renderChainId]\r\n    const correctChainAndConnected = renderChainId === activeChainId && isConnected()\r\n    const isRequested = renderChainId === requestedId\r\n\r\n    if (!chainId || !info) {\r\n        return <></>\r\n    }\r\n    return <AppButton fill={\r\n        correctChainAndConnected ? \"solid\" : isRequested ? \"outline\" : \"clear\"\r\n\r\n    } color={activeChainId === renderChainId && isConnected() ? \"favorite\" : isRequested ? \"warning\" : \"medium\"} onClick={async () => {\r\n        const renderChainIdUint256 = parseInt(renderChainId, 10);\r\n        setRequested(renderChainIdUint256);\r\n        const chainInfo = chains[renderChainId]\r\n        if (String(activeChainId) !== chainId) {\r\n            (ethereum || window.ethereum).request(JSON.parse(JSON.stringify({\r\n                method: 'wallet_switchEthereumChain',//'wallet_switchEthereumChain',\r\n                params: [{\r\n                    chainId: chainInfo.chainIdHex,\r\n                }]\r\n            }))).then(() => {\r\n                connect(\"injected\");\r\n            }).catch(() => {\r\n                // eslint-disable-next-line no-restricted-globals\r\n                const yes = confirm(\"add chain:\" + chainInfo.name + \"?\")\r\n                if (!yes) {\r\n                    return;\r\n                }\r\n                (ethereum || window.ethereum).request(JSON.parse(JSON.stringify({\r\n                    method: 'wallet_addEthereumChain',//'wallet_switchEthereumChain',\r\n                    params: [{\r\n                        chainName: chainInfo.name,\r\n                        nativeCurrency: chainInfo.nativeCurrency,\r\n                        chainId: chainInfo.chainIdHex,\r\n                        blockExplorerUrls: chainInfo.blockExplorerUrls,\r\n                        rpcUrls: [...chainInfo.rpc]\r\n                    }]\r\n                }))).catch((e: any) => {\r\n                    console.log(e)\r\n                    alert(\"adding failed\");\r\n                }).finally(() => {\r\n                }).then(() => {\r\n                    connect(\"injected\");\r\n                })\r\n            })\r\n        }\r\n    }\r\n    } > <ChainIdIconSmall chainId={info.chainId} />{info.shortName} </AppButton >\r\n}\r\n\r\n\r\nexport const ChainIdIconSmall: React.FC<{ chainId: number }> = ({ chainId }) => {\r\n    const renderChainId = String(chainId);\r\n    const chains = useChainId(x => x.chainIds);\r\n    const info = chains[renderChainId]\r\n    console.log(renderChainId, chainId);\r\n    let prefix = \"https://cdn.jsdelivr.net/gh/atomiclabs/cryptocurrency-icons@d5c68edec1f5eaec59ac77ff2b48144679cebca1/32/color/\";\r\n    if (!chainId || !info) {\r\n        return <></>\r\n    }\r\n    let img = prefix + info.nativeCurrency.symbol.toLowerCase() + \".png\"\r\n    if (chainId === 44787 || chainId === 42220) {\r\n        img = \"https://smol.mypinata.cloud/ipfs/QmYcpQeqoGiZfJ4zAUdrJc7c6vwyFDnE6oVJHMgzDzXzyK\";\r\n    }\r\n    return info ? <AppImg alt={renderChainId} src={img}></AppImg> : <></>\r\n}\r\n\r\nexport const WalletConnector: React.FC<{ activeChainId?: number, showIcon?: boolean }> = ({ activeChainId, showIcon = false }) => {\r\n\r\n    const [showModal, setShowModal] = useState<boolean>(false)\r\n    const { getBlockNumber, isConnected, chainId } = useWallet()\r\n    const blockNumber = getBlockNumber && getBlockNumber()\r\n    return <>\r\n        {chainId && showIcon && <ChainIdIconSmall chainId={chainId} />}\r\n        <AppButton onClick={() => {\r\n            setShowModal(true);\r\n        }}>{isConnected() ? \"Connected\" : showModal ? \"Connecting\" : \"Connect Wallet\"}\r\n\r\n        </AppButton>\r\n\r\n        <AppModal title=\"Wallet\" isOpen={showModal} onDismiss={() =>\r\n            setShowModal(false)\r\n\r\n        }>\r\n\r\n            <WalletCard dismiss={() => {\r\n                setShowModal(false);\r\n            }} />\r\n        </AppModal>\r\n    </>\r\n}\r\n","import { AppRoute } from \"atomic\";\r\nimport Home from \"../pages/Home\";\r\nexport const dashboardRoute: AppRoute = { icon: \"\", path: \"/\", title: \"Dashboard\", component: Home, exact: true };\r\n","import { AppPage, AppRouteCard } from \"atomic\"\r\nimport { hexlify } from \"ethers/lib/utils\";\r\nimport { useWallet } from \"use-wallet\";\r\nimport { contractListRoute } from \"../routes/contract-routes\";\r\nconst Home: React.FC = () => {\r\n  const { account } = useWallet();\r\n  return (\r\n    <AppPage>\r\n\r\n\r\n    </AppPage>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { Ierc721Enumerable } from \"./Ierc721Enumerable\";\n\nexport class Ierc721EnumerableFactory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Ierc721Enumerable {\n    return new Contract(address, _abi, signerOrProvider) as Ierc721Enumerable;\n  }\n}\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"index\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenOfOwnerByIndex\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","/* Autogenerated file. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { Contract, Signer } from \"ethers\";\nimport { Provider } from \"@ethersproject/providers\";\n\nimport type { Ierc721Metadata } from \"./Ierc721Metadata\";\n\nexport class Ierc721MetadataFactory {\n  static connect(\n    address: string,\n    signerOrProvider: Signer | Provider\n  ): Ierc721Metadata {\n    return new Contract(address, _abi, signerOrProvider) as Ierc721Metadata;\n  }\n}\n\nconst _abi = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"approved\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"bool\",\n        name: \"approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"ApprovalForAll\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"getApproved\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n    ],\n    name: \"isApprovedForAll\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"ownerOf\",\n    outputs: [\n      {\n        internalType: \"address\",\n        name: \"owner\",\n        type: \"address\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"safeTransferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"operator\",\n        type: \"address\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"_approved\",\n        type: \"bool\",\n      },\n    ],\n    name: \"setApprovalForAll\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"bytes4\",\n        name: \"interfaceId\",\n        type: \"bytes4\",\n      },\n    ],\n    name: \"supportsInterface\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"tokenURI\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"tokenId\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n];\n","import { AppRoute } from \"atomic\";\r\nimport { Vault } from \"../pages/Vault\";\r\nexport const vaultRoute: AppRoute = { icon: \"\", path: \"/\", title: \"Vault\", component: Vault, exact: true };\r\n","import { AppBadge, AppCard, AppChip, AppCol, AppContent, AppImg, AppLabel, AppRow, AppTitle } from \"atomic\"\r\nimport { ethers } from \"ethers\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useWallet } from \"use-wallet\"\r\nimport { WalletCard } from \"../components/wallet/WalletCard\"\r\nimport { WalletConnector } from \"../components/wallet/WalletConnector\"\r\nimport { Ierc721EnumerableFactory } from \"../contracts/Ierc721EnumerableFactory\"\r\nimport { Ierc721MetadataFactory } from \"../contracts/Ierc721MetadataFactory\"\r\nexport const Vault: React.FC = () => {\r\n\r\n\r\n    const { account, ethereum } = useWallet()\r\n    const [keyIndexOwned, setKeyIndexOwned] = useState(3)\r\n    const [metadata, setMetadata] = useState<any>()\r\n    useEffect(() => {\r\n        if (!ethereum || !account) {\r\n            return;\r\n        }\r\n        const signer = (new ethers.providers.Web3Provider(ethereum)).getSigner();\r\n        const TELOKEYS = Ierc721EnumerableFactory.connect(\"0x7a6EFd9685D50b5d6f1be49B1e80d2F50F384CA1\", signer)\r\n\r\n        TELOKEYS.functions.ownerOf(1).then(({ owner }) => {\r\n            if (owner.toLowerCase() === account.toLowerCase()) {\r\n                setKeyIndexOwned(1);\r\n            }\r\n        });\r\n        TELOKEYS.functions.ownerOf(2).then(({ owner }) => {\r\n            if (owner.toLowerCase() === account.toLowerCase()) {\r\n                setKeyIndexOwned(2);\r\n            }\r\n        });\r\n        TELOKEYS.functions.ownerOf(3).then(({ owner }) => {\r\n            if (owner.toLowerCase() === account.toLowerCase()) {\r\n                setKeyIndexOwned(3);\r\n            }\r\n        });\r\n    }, [account, ethereum])\r\n\r\n    useEffect(() => {\r\n        if (!ethereum || !account) {\r\n            return;\r\n        }\r\n        if (keyIndexOwned !== -1) {\r\n            const signer = (new ethers.providers.Web3Provider(ethereum)).getSigner();\r\n            const TELOKEYS = Ierc721MetadataFactory.connect(\"0x7a6EFd9685D50b5d6f1be49B1e80d2F50F384CA1\", signer)\r\n\r\n            TELOKEYS.functions.tokenURI(keyIndexOwned).then((uri) => {\r\n                fetch(uri[0].replaceAll(\"ipfs://\", \"https://smol.mypinata.cloud/ipfs/\")).then(async (res) => {\r\n                    const data = await res.json();\r\n                    setMetadata(data as any);\r\n                    console.log(data);\r\n                })\r\n            });\r\n        }\r\n    }, [ethereum, account, keyIndexOwned])\r\n\r\n    console.log(metadata);\r\n    return <AppContent>\r\n\r\n\r\n        {metadata && <AppCard title={\"My Telesto NFTs\"}>\r\n            <AppRow>\r\n                <AppCol size=\"12\">\r\n                    <AppImg src={metadata.image.replaceAll(\"ipfs://\", \"https://smol.mypinata.cloud/ipfs/\")} alt={\"\"} />\r\n                    {(metadata.attributes).map((attribute: any) => {\r\n                        return <AppRow><AppTitle>{attribute.trait_type}</AppTitle><AppChip>{attribute.value}</AppChip></AppRow>\r\n                    })}\r\n                </AppCol>\r\n            </AppRow>\r\n            {!account && <>\r\n                <WalletConnector />\r\n            </>}\r\n        </AppCard>\r\n        }\r\n        {\r\n            account && <WalletCard hideOk dismiss={() => { }} />\r\n        }\r\n\r\n    </AppContent>\r\n}","import { AppRoute } from \"atomic\";\r\nimport { dashboardRoute } from \"./dashboard-route\";\r\nimport { contractRoutes } from \"./contract-routes\";\r\nimport { vaultRoute } from \"./vault-routes\";\r\n\r\nexport const routes: AppRoute[] = [dashboardRoute, vaultRoute]","import { AppConfig } from \"atomic\";\r\nimport { cache } from \"../cache\";\r\nimport { WalletConnector } from \"../components/wallet/WalletConnector\";\r\nimport { routes, sections } from \"../routes/\";\r\n\r\nconst Config: AppConfig =\r\n{\r\n    appId: \"web3-atoms\",\r\n    version: \"0.0.3\",\r\n    title: \"Web3 Atoms\",\r\n    cache,\r\n    mainMenu: {\r\n        sections\r\n    },\r\n    bottomBar: { start: () => WalletConnector({ showIcon: true }) },\r\n    routes,\r\n    settings: { disabled: true },\r\n    darkMode: true,\r\n    animated: true,\r\n    serialization: {\r\n        mode: \"local\"\r\n    }\r\n\r\n}\r\nexport default Config;","import { contractListRoute } from \"./contract-routes\";\r\nimport { vaultRoute } from \"./vault-routes\";\r\n\r\nexport const sections = { \"Vault\": [vaultRoute] }\r\n","import { AppRoot } from 'atomic';\r\nimport { UseWalletProvider } from 'use-wallet';\r\nimport config from \"./config\";\r\n\r\nconst App: React.FC = () => {\r\n  return <UseWalletProvider><AppRoot {...config}>\r\n  </AppRoot></UseWalletProvider>\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}